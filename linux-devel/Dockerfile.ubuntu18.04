FROM ubuntu:18.04

MAINTAINER Douk Joo, Shim <djshim@zeronex.co.kr>

RUN sed -i 's/archive.ubuntu.com/kr.archive.ubuntu.com/g' /etc/apt/sources.list
RUN apt-get update
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
RUN apt-get install -y -q
RUN apt-get install -y dialog apt-utils
RUN apt-get install -y openssh-server
RUN mkdir /var/run/sshd
# root password is '제로닉스' in english keyboard
RUN echo 'root:wpfhslrtm' | chpasswd
RUN useradd -ms /bin/bash user
# user password is 'user'
RUN sed -ie 's/user:!/user:$6$tHzf\/Hld$p7UjlunntTDtNim1yGmF2sFO43p4QJQ3Gesm3we4Q58Biwwk4aW1L4.0XzoZIXAkPCOSjvftwQybyy\/3GsqBm0/g' /etc/shadow

# SSH login fix. Otherwise user is kicked off after login
RUN sed -i 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' /etc/pam.d/sshd
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
RUN sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config


ENV NOTVISIBLE="in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile
RUN echo "PATH=\$HOME/bin:$PATH" >> /etc/profile
RUN echo "alias ll='ls -la'" >> /etc/profile

# set timezone
RUN apt-get install -yq tzdata
RUN ln -sf /usr/share/zoneinfo/ROK /etc/localtime

# install devel-packages
RUN apt-get install -y build-essential diffstat texinfo chrpath
RUN apt-get install -y libssl-dev
RUN apt-get install -y subversion
RUN apt-get install -y ncurses-dev libz-dev git gawk wget flex bison 
RUN apt-get install -y libncurses5-dev libncursesw5-dev
RUN apt-get install -y vim lsb lzma libmpc-dev
RUN apt-get install -y xinetd tftpd nfs-kernel-server minicom autoconf
RUN apt-get install -y automake dos2unix screen lrzsz lzop
RUN apt-get install -y cpio python unzip bc
RUN apt-get install -y ctags cscope
RUN apt-get install -y net-tools iputils-ping nfs-kernel-server
RUN apt-get install -y util-linux u-boot-tools
RUN apt-get install -y x11-apps
RUN apt-get install -y sudo kmod
RUN dpkg --add-architecture i386
RUN apt-get update
#RUN apt-get install -y xterm texinfo gcc-multilib zlib1g:i386 tftpd-hpa
RUN apt-get install -y texinfo
RUN apt-get install -y libncurses5:i386 zlib1g:i386 libc6-dev-i386 g++-multilib
RUN apt-get install -y libc6:i386 libstdc++6:i386

# permit root ssh connection
RUN sed -i 's/^.*PermitRootLogin*$/PermitRootLogin yes/g' /etc/ssh/sshd_config 
RUN sed -i 's/^.*PasswordAuthentication*$/PasswordAuthentication yes/g' /etc/ssh/sshd_config 
RUN sed -i 's/^.*ChallengeResponseAuthentication*$/ChallengeResponseAuthentication no/g' /etc/ssh/sshd_config 

# For CCS install
RUN sed -i 's/^.*X11Forwarding.*$/X11Forwarding yes/g' /etc/ssh/sshd_config 
RUN sed -i 's/^.*X11UseLocalhost.*$/X11UseLocalhost no/g' /etc/ssh/sshd_config 
RUN apt-get install -y libusb-0.1-4 libgconf-2-4 libgtk2.0-0 
RUN apt-get install -y libpython2.7 libasound2 libsecret-1-0
RUN apt-get install -y libusb-1.0-0 libxtst6 libcanberra-gtk3-0
RUN apt-get install -y openjdk-8-jre chromium-browser
RUN apt-get install -y gnupg ca-certificates
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
RUN echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | tee /etc/apt/sources.list.d/mono-official-stable.list
RUN apt-get update
RUN apt-get install -y mono-devel

RUN echo 'user  ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
RUN rm -rf /usr/bin/rgrep
ADD rgrep /usr/bin/rgrep
RUN chmod +x /usr/bin/rgrep

USER user
RUN mkdir -p /home/user/.vim/bundle
RUN mkdir -p /home/user/bin
RUN cd /home/user/.vim/bundle
RUN git clone https://github.com/VundleVim/Vundle.vim.git /home/user/.vim/bundle/Vundle.vim
ADD vimrc /home/user/.vimrc
ADD rgrep /home/user/bin/rgrep
ADD cstag /home/user/bin/cstag
CMD ["chmod", "+x /home/user/bin/rgrep"]
CMD ["chmod", "+x /home/user/bin/cstag"]

USER root
RUN mkdir -p /tftpboot
RUN chmod 777 /tftpboot
EXPOSE 22
RUN chown user:user /home/user/bin/*
CMD ["/usr/sbin/sshd", "-D"]

############### RUN this ##############
# docker build -t linux-devel:18.04 .
#######################################
